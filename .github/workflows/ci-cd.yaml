name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-repo:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-repo:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-repo:latest

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Create kubeconfig directory
        run: mkdir -p $HOME/.kube

      - name: Set up Kubeconfig
        run: echo "${{ secrets.KUBECONF }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes (Production)
        run: kubectl apply -f kubernetes/prod-deployment.yaml

  deploy-dev:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Create kubeconfig directory
        run: mkdir -p $HOME/.kube

      - name: Set up Kubeconfig
        run: echo "${{ secrets.KUBECONF }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes (Development)
        run: kubectl apply -f deployment.yaml
